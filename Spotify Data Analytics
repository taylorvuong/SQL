# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

# Then I inserted the Spotify Data .csv into the table.
# Next, I explored the data using the following SQL. 

SELECT * FROM BIT_DB.Spotifydata;

#1. Who are the top 10 most popular music artists?

SELECT artist_name, 
    AVG(danceability)
    FROM Spotifydata
    GROUP BY artist_name
    ORDER BY popularity LIMIT 10;

#2. Who are the top 10 least popular music artists?

SELECT distinct(artist_name), popularity
    FROM BIT_DB.Spotifydata
    ORDER BY popularity ASC
    LIMIT 10;

#3. What songs have the duration of less than 4 minutes?

SELECT track_name, duration_ms
    FROM BIT_DB.Spotifydata
    WHERE duration_ms<240000
    ORDER BY duration_ms desc;

#4. What are the top 5 longest songs in duration?

SELECT artist_name, track_name, duration_ms
    FROM BIT_DB.Spotifydata
    ORDER BY duration_ms DESC
    LIMIT 5;

#5. Which artists had 2 or more music tracks in the top 10?

SELECT artist_name, count(track_name) as num_tracks
    FROM bit_db.spotifydata
    GROUP BY artist_name
    HAVING num_tracks <> 1
    ORDER BY num_tracks DESC;
